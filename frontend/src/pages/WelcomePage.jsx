import React, { useState, useEffect } from 'react';
import {
    Button,
    Flex,
    Heading,
    Stack,
    useColorModeValue,
    Text,
    Box,
    VStack,
    HStack,
    Link
} from "@chakra-ui/react";
import { useNavigate } from 'react-router-dom';
import {
    Step,
    StepDescription,
    StepIcon,
    StepIndicator,
    StepNumber,
    StepSeparator,
    StepStatus,
    StepTitle,
    Stepper,
    useSteps,
  } from '@chakra-ui/react'
  import mixpanel from '../utils/mixpanel';

const steps = [
    { title: 'First', description: 'step' },
    { title: 'Second', description: 'step' },
    { title: 'Third', description: 'step' },
];

const WelcomePage = () => {

    const navigate = useNavigate();

    useEffect(() => {
        // Identify the user
        mixpanel.identify('guest_user');
    
        // Set user properties
        mixpanel.people.set({
          '$last_login': new Date(),
        });
    
        // Track page view
        mixpanel.track('Page View', {
          'Page Path': '/welcome',
        });
        
        // ... rest of your useEffect code, if any
      }, []);

    const { activeStep, setActiveStep } = useSteps({
        index: 0,
        count: steps.length,
    });

    const handleNextStep = () => {
        if (activeStep < steps.length - 1) {
            setActiveStep(activeStep + 1);
        } else {
            console.log("finish");
            navigate('/home');
        }
        mixpanel.track('Button Clicked', {
            'Button Type': 'welcome steps',
        });
    };

    const handlePreviousStep = () => {
        if (activeStep > 0) {
            setActiveStep(activeStep - 1);
        }
        mixpanel.track('Button Clicked', {
            'Button Type': 'welcome steps',
        });
    };

    return (
        <Flex align={"center"} justify={"center"} my={6} direction="column" h="full">
            <Stack
                spacing={4}
                w={"full"}
                maxW={"md"}
                bg={useColorModeValue("white", "gray.dark")}
                rounded={"xl"}
                boxShadow={"lg"}
                p={6}
                mb={4}
            >
                <Heading lineHeight={1.1} fontSize={{ base: "2xl", sm: "3xl" }} align={"center"} justify={"center"}>
                    Welcome Bella üíôüíôüíô
                </Heading>

                {/* Conditional rendering of content based on activeStep */}
                {activeStep === 0 && <Text align={"center"} textAlign="justify">
                    –ü—Ä–∏–≤–µ—Ç üíô –µ—Å–ª–∏ —Ç—ã —ç—Ç–æ —á–∏—Ç–∞–µ—à—å, –∑–Ω–∞—á–∏—Ç –∫–∞–∫–∏–º-—Ç–æ –æ–±—Ä–∞–∑–æ–º –º–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–µ–±–µ –±–ª–æ–∫–Ω–æ—Ç —Å –∫–æ–º–∏–∫—Å–æ–º –∏ —Ç—ã –≤–µ—Å—å –µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∞‚Ä¶ <br/> <br/>
                    –í–µ—Ä–Ω–µ–º—Å—è –∫ —Å–∞–π—Ç—É. –ù–∞–∂–º–∏ –Ω–∞ üíô —Å–≤–µ—Ä—Ö—É, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —Å–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç–∞. <br/> <br/>
                    –°–∞–π—Ç –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∏ —Å –∫–æ–º–ø–∞, —Å–¥–µ–ª–∞–ª –µ–≥–æ —è, –ø–æ—ç—Ç–æ–º—É –Ω–µ —Å—É–¥–∏ –æ—á–µ–Ω—å —Å—Ç—Ä–æ–≥–æ, —è —Ç–æ–ª—å–∫–æ —É—á—É—Å—å –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ üíô
                    </Text>}
                {activeStep === 1 && <Text align={"center"} textAlign="justify">
                    –î–æ–ª–∂–µ–Ω —Ç–µ–±—è –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å, —Ç–∞–º –±—É–¥–µ—Ç –æ—á–µ–Ω—å –º–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –º—ã—Å–ª–µ–π, —ç–º–æ—Ü–∏–π, –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª –≥–æ–¥–∞... <br/> <br/>
                    –ß—Ç–æ–±—ã –ª—É—á—à–µ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–µ–±–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —è –≤—Å–µ —ç—Ç–æ –¥–µ–ª–∞–ª, –ø—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ —Å–∫–∞—á–∞—Ç—å —ç—Ç–æ—Ç –ø–ª–µ–π–ª–∏—Å—Ç, –≤–∫–ª—é—á–∏—Ç—å –µ–≥–æ –≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É. <br/> <br/>
                    <Text align={"center"} fontSize={{ base: "xl", sm: "xl" }}>
                        <Link href="https://music.yandex.com/users/TitanPro10/playlists/1009?utm_medium=copy_link" isExternal color="blue.500">üíô Download Playlist üíô</Link>
                    </Text>
                </Text>}
                {activeStep === 2 && <Text align={"center"} textAlign="justify">
                    –ù—É –≤–æ—Ç –∏ –æ—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥, –ø—Ä–µ–∂–¥–µ —á–µ–º —Ç—ã –ø–æ–≥—Ä—É–∑–∏—à—å—Å—è –≤ —ç—Ç–æ—Ç —Å–∞–π—Ç. <br/> <br/>
                    –ù–∞ —Å–ª–µ–¥—É—é—â–µ–º —ç—Ç–∞–ø–µ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤–æ–π—Ç–∏ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –º–Ω–æ–π –∞–∫–∫–∞—É–Ω—Ç, —è —Ç–µ–±–µ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–º–æ–≥—É –≤ —ç—Ç–æ–º. <br/> 
                        <p align="center">username: <Text as='b' fontSize={{ base: "xl", sm: "xl" }}>bella</Text></p> 
                    A –≤–æ—Ç –ø–∞—Ä–æ–ª—å - —ç—Ç–æ –¥–∞—Ç–∞, –Ω–∞—à–∞ –¥–∞—Ç–∞, —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 6 —Ü–∏—Ñ—Ä (–¥–¥–º–º–≥–≥). –ü–æ–ø—ã—Ç–æ–∫ —É —Ç–µ–±—è –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ. –£–¥–∞—á–∏ –∏ —É–≤–∏–¥–∏–º—Å—è –≤–Ω—É—Ç—Ä–∏ üíô   
                </Text>}

                <HStack mt={4} spacing={4} justify={"center"}>
                    <Button onClick={handlePreviousStep} isDisabled={activeStep === 0}>
                        Back
                    </Button>
                    <Button colorScheme="blue" onClick={handleNextStep}>
                        {activeStep < steps.length - 1 ? "Next" : "Login"}
                    </Button>
                </HStack>

            </Stack>

            <VStack
                w={"full"}
                maxW={"md"}
                align="center"
                spacing={4}
                position="fixed"
                bottom={8}
                left="50%"
                transform="translateX(-50%)"
            >
                <Stepper size='lg' index={activeStep}>
                    {steps.map((step, index) => (
                        <Step key={index}>
                            <StepIndicator>
                                <StepStatus
                                    complete={<StepIcon />}
                                    incomplete={<StepNumber />}
                                    active={<StepNumber />}
                                />
                            </StepIndicator>

                            <Box flexShrink='0'>
                                <StepTitle>{step.title}</StepTitle>
                                <StepDescription>{step.description}</StepDescription>
                            </Box>

                            {index < steps.length - 1 && <StepSeparator />}
                        </Step>
                    ))}
                </Stepper>

            </VStack>
        </Flex>
    );
}

export default WelcomePage;